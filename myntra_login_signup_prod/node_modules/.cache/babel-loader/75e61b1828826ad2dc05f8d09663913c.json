{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styles from \"./wishlist.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteWishData, getWishData, patchWishData, patchWishEmptySize } from '../../Redux/Wishlist/action';\nimport maxresdefault from \"./images/maxresdefault.jpg\";\nimport wishlist from \"./images/wishlist.png\";\nimport { Link } from \"react-router-dom\"; // import { postBagData } from '../../Redux/Bag/action';\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Wishlist = () => {\n  _s();\n\n  const [wishlistModel, setWishlistModel] = useState(false);\n  const [isDeleted, setIsDeleted] = useState(false);\n  const [wishlistModelArray, setWishlistModelArray] = useState([]);\n  const [delProduct, setDelProduct] = useState([]);\n  const [isSizeSelected, setIsSizeSelected] = useState(false);\n  const [isSizeNotSelected, setIsSizeNotSelected] = useState(false);\n  const [isMovedToBag, setIsMovedToBag] = useState(false);\n  const [isSame, setIsSame] = useState(\"\");\n  const wishlistData = useSelector(state => state.wishlist.wishlistData);\n  const dispatch = useDispatch();\n\n  const handleDeleteWishlist = idx => {\n    const deletedProduct = wishlistData.filter(item => item.id === idx);\n    setDelProduct(deletedProduct[0]);\n    dispatch(deleteWishData(idx));\n    setIsDeleted(true);\n  }; // console.log(delProduct);\n\n\n  const handleModelWishlist = idx => {\n    setWishlistModel(true);\n    const updatedWishlistModel = wishlistData.filter(item => item.id === idx);\n    setWishlistModelArray(updatedWishlistModel);\n  };\n\n  const handleModelWishClose = idx => {\n    setWishlistModel(false);\n    setIsSizeSelected(false);\n    setIsSame(\"\");\n    dispatch(patchWishEmptySize(idx));\n  };\n\n  const handleModelWishRetain = () => {\n    setWishlistModel(true);\n  };\n\n  const handleDoneWithoutSize = () => {\n    setIsSizeNotSelected(true);\n  };\n\n  const handleSizeSelect = (idx, sizex) => {\n    setIsSizeSelected(true);\n    setIsSame(sizex); // console.log(idx, sizex);\n\n    dispatch(patchWishData(idx, sizex));\n  }; // const handleDoneWithSize = () => {\n  //   setIsSizeSelected(true)\n  // }\n\n\n  const handleMoveToBag = idx => {\n    const deletedProduct = wishlistData.filter(item => item.id === idx);\n    setDelProduct(deletedProduct[0]);\n    dispatch(deleteWishData(idx));\n    setIsMovedToBag(true);\n    setIsSizeSelected(false); //   const updatedBag = wishlistData.filter(el=> el.id===idx )\n    //   dispatch( postBagData(updatedBag[0]) )\n    //   setIsSame(\"\")\n  };\n\n  useEffect(() => {\n    dispatch(getWishData());\n    setWishlistModel(false);\n\n    if (isDeleted) {\n      setTimeout(() => {\n        setIsDeleted(false);\n      }, 1500);\n    }\n\n    if (isSizeNotSelected) {\n      setTimeout(() => {\n        setIsSizeNotSelected(false);\n      }, 1500);\n    }\n\n    if (isMovedToBag) {\n      setTimeout(() => {\n        setIsMovedToBag(false);\n      }, 1500);\n    }\n  }, [dispatch, isDeleted, isSizeNotSelected, isMovedToBag]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Wishlist\"\n  }, void 0, false);\n};\n\n_s(Wishlist, \"Ad3d/FKbQIkp3nxXZCutS1XpT0E=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Wishlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wishlist\");","map":{"version":3,"sources":["C:/Users/saran/Myntra_Clone/myntra_login_signup_prod/src/components/wishlist/wishlist.jsx"],"names":["React","useEffect","useState","styles","useDispatch","useSelector","deleteWishData","getWishData","patchWishData","patchWishEmptySize","maxresdefault","wishlist","Link","Wishlist","wishlistModel","setWishlistModel","isDeleted","setIsDeleted","wishlistModelArray","setWishlistModelArray","delProduct","setDelProduct","isSizeSelected","setIsSizeSelected","isSizeNotSelected","setIsSizeNotSelected","isMovedToBag","setIsMovedToBag","isSame","setIsSame","wishlistData","state","dispatch","handleDeleteWishlist","idx","deletedProduct","filter","item","id","handleModelWishlist","updatedWishlistModel","handleModelWishClose","handleModelWishRetain","handleDoneWithoutSize","handleSizeSelect","sizex","handleMoveToBag","setTimeout"],"mappings":"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","sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport styles from \"./wishlist.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteWishData, getWishData, patchWishData, patchWishEmptySize } from '../../Redux/Wishlist/action';\r\nimport maxresdefault from \"./images/maxresdefault.jpg\";\r\nimport wishlist from \"./images/wishlist.png\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n// import { postBagData } from '../../Redux/Bag/action';\r\nexport const Wishlist = () => {\r\n    \r\n    const [wishlistModel, setWishlistModel] = useState(false);\r\n    const [isDeleted, setIsDeleted] = useState(false);\r\n    const [wishlistModelArray, setWishlistModelArray] = useState([]);\r\n    const [delProduct, setDelProduct] = useState([]);\r\n    const [isSizeSelected, setIsSizeSelected] = useState(false);\r\n    const [isSizeNotSelected, setIsSizeNotSelected] = useState(false);\r\n    const [isMovedToBag, setIsMovedToBag] = useState(false);\r\n    const [isSame, setIsSame] = useState(\"\");\r\n\r\n    const wishlistData = useSelector(state => state.wishlist.wishlistData);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n   \r\n    const handleDeleteWishlist = (idx) => {\r\n        const deletedProduct = wishlistData.filter(item => item.id === idx);\r\n        setDelProduct(deletedProduct[0]);\r\n        dispatch(deleteWishData(idx));\r\n        setIsDeleted(true);\r\n    }\r\n    // console.log(delProduct);\r\n\r\n    const handleModelWishlist = (idx) => {\r\n        setWishlistModel(true)\r\n        const updatedWishlistModel = wishlistData.filter(item => item.id === idx);\r\n        setWishlistModelArray(updatedWishlistModel);\r\n    }\r\n\r\n    const handleModelWishClose = (idx) => {\r\n        setWishlistModel(false);\r\n        setIsSizeSelected(false);\r\n        setIsSame(\"\");\r\n        dispatch( patchWishEmptySize(idx) )\r\n    }\r\n\r\n    const handleModelWishRetain = () => {\r\n      setWishlistModel(true)\r\n    }\r\n\r\n    const handleDoneWithoutSize = () => {\r\n      setIsSizeNotSelected(true) \r\n    }\r\n\r\n    const handleSizeSelect = (idx, sizex) => {\r\n      setIsSizeSelected(true)\r\n      setIsSame(sizex)\r\n      // console.log(idx, sizex);\r\n      dispatch( patchWishData(idx, sizex) )\r\n    }\r\n\r\n    // const handleDoneWithSize = () => {\r\n    //   setIsSizeSelected(true)\r\n    // }\r\n    \r\n    const handleMoveToBag = (idx) => {\r\n      const deletedProduct = wishlistData.filter(item=>item.id===idx )\r\n      setDelProduct(deletedProduct[0])\r\n      dispatch( deleteWishData(idx) )\r\n      setIsMovedToBag(true)\r\n      setIsSizeSelected(false)\r\n\r\n    //   const updatedBag = wishlistData.filter(el=> el.id===idx )\r\n    //   dispatch( postBagData(updatedBag[0]) )\r\n    //   setIsSame(\"\")\r\n\r\n    }\r\n\r\n    useEffect(()=> {\r\n        dispatch( getWishData() )\r\n        setWishlistModel(false)\r\n\r\n        if (isDeleted) {\r\n          setTimeout(() => {\r\n            setIsDeleted(false)\r\n          }, 1500);\r\n        }\r\n\r\n        if (isSizeNotSelected) {\r\n          setTimeout(() => {\r\n            setIsSizeNotSelected(false)\r\n          }, 1500);\r\n        }\r\n\r\n        if (isMovedToBag) {\r\n          setTimeout(() => {\r\n            setIsMovedToBag(false)\r\n          }, 1500);\r\n        }\r\n    }, [dispatch, isDeleted, isSizeNotSelected, isMovedToBag])\r\n\r\n    return (\r\n        <>\r\n            Wishlist\r\n            \r\n        </>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}