{"ast":null,"code":"import { DELETE_WISH_FAILURE, DELETE_WISH_REQUEST, DELETE_WISH_SUCCESS, GET_WISH_FAILURE, GET_WISH_REQUEST, GET_WISH_SUCCESS, PATCH_WISH_FAILURE, PATCH_WISH_REQUEST, PATCH_WISH_SUCCESS, POST_WISH_FAILURE, POST_WISH_REQUEST, POST_WISH_SUCCESS } from \"./actionTypes\";\nconst initState = {\n  isLoading: false,\n  isError: false,\n  isSuccess: false,\n  wishlistData: []\n};\nexport const wishlistReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case POST_WISH_REQUEST:\n      return { ...state,\n        isLoading: true,\n        isError: false,\n        isSuccess: false\n      };\n\n    case POST_WISH_SUCCESS:\n      return { ...state,\n        // wishlistData: [...state.wishlistData, payload],\n        // wishlistData: payload,\n        isLoading: false,\n        isError: false,\n        isSuccess: true\n      };\n\n    case POST_WISH_FAILURE:\n      return { ...state,\n        isLoading: false,\n        isError: true,\n        isSuccess: false\n      };\n\n    case GET_WISH_REQUEST:\n      return { ...state,\n        isLoading: true,\n        isError: false,\n        isSuccess: false\n      };\n\n    case GET_WISH_SUCCESS:\n      const updated = [];\n\n      for (let i = payload.length - 1; i >= 0; i--) {\n        updated.push(payload[i]);\n      }\n\n      return { ...state,\n        wishlistData: updated,\n        isLoading: false,\n        isError: false,\n        isSuccess: true\n      };\n\n    case GET_WISH_FAILURE:\n      return { ...state,\n        isLoading: false,\n        isError: true,\n        isSuccess: false\n      };\n\n    case DELETE_WISH_REQUEST:\n      return { ...state,\n        isLoading: true,\n        isError: false,\n        isSuccess: false\n      };\n\n    case DELETE_WISH_SUCCESS:\n      return { ...state,\n        // wishlistData: payload,\n        isLoading: false,\n        isError: false,\n        isSuccess: true\n      };\n\n    case DELETE_WISH_FAILURE:\n      return { ...state,\n        isLoading: false,\n        isError: true,\n        isSuccess: false\n      };\n\n    case PATCH_WISH_REQUEST:\n      return { ...state,\n        isLoading: true,\n        isError: false,\n        isSuccess: false\n      };\n\n    case PATCH_WISH_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        isError: false,\n        isSuccess: true\n      };\n\n    case PATCH_WISH_FAILURE:\n      return { ...state,\n        isLoading: false,\n        isError: true,\n        isSuccess: false\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/saran/Myntra_Clone/myntra_login_signup_prod/src/Redux/Wishlist/reducer.js"],"names":["DELETE_WISH_FAILURE","DELETE_WISH_REQUEST","DELETE_WISH_SUCCESS","GET_WISH_FAILURE","GET_WISH_REQUEST","GET_WISH_SUCCESS","PATCH_WISH_FAILURE","PATCH_WISH_REQUEST","PATCH_WISH_SUCCESS","POST_WISH_FAILURE","POST_WISH_REQUEST","POST_WISH_SUCCESS","initState","isLoading","isError","isSuccess","wishlistData","wishlistReducer","state","type","payload","updated","i","length","push"],"mappings":"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","sourcesContent":["import { DELETE_WISH_FAILURE, DELETE_WISH_REQUEST, DELETE_WISH_SUCCESS, GET_WISH_FAILURE, GET_WISH_REQUEST, GET_WISH_SUCCESS, PATCH_WISH_FAILURE, PATCH_WISH_REQUEST, PATCH_WISH_SUCCESS, POST_WISH_FAILURE, POST_WISH_REQUEST, POST_WISH_SUCCESS } from \"./actionTypes\";\n\nconst initState = {\n    isLoading: false,\n    isError: false,\n    isSuccess: false,\n    wishlistData: []\n}\n\nexport const wishlistReducer = (state=initState, {type, payload}) => {\n\n    switch (type) {\n        \n        case POST_WISH_REQUEST :\n        return {\n            ...state,\n            isLoading: true,\n            isError: false,\n            isSuccess: false\n        }    \n        \n        case POST_WISH_SUCCESS :\n        return {\n            ...state,\n            // wishlistData: [...state.wishlistData, payload],\n            // wishlistData: payload,\n            isLoading: false,\n            isError: false,\n            isSuccess: true\n        }\n\n        case POST_WISH_FAILURE :\n        return {\n            ...state,\n            isLoading: false,\n            isError: true,\n            isSuccess: false\n        }\n        \n        case GET_WISH_REQUEST :\n        return {\n            ...state,\n            isLoading: true,\n            isError: false,\n            isSuccess: false\n        }    \n        \n        case GET_WISH_SUCCESS :\n        const updated = []\n        for (let i=payload.length-1; i>=0; i--) {\n            updated.push(payload[i])\n        }\n        return {\n            ...state,\n            wishlistData: updated,\n            isLoading: false,\n            isError: false,\n            isSuccess: true\n        }\n\n        case GET_WISH_FAILURE :\n        return {\n            ...state,\n            isLoading: false,\n            isError: true,\n            isSuccess: false\n        }\n\n        case DELETE_WISH_REQUEST :\n        return {\n            ...state,\n            isLoading: true,\n            isError: false,\n            isSuccess: false\n        }    \n        \n        case DELETE_WISH_SUCCESS :\n        return {\n            ...state,\n            // wishlistData: payload,\n            isLoading: false,\n            isError: false,\n            isSuccess: true\n        }\n\n        case DELETE_WISH_FAILURE :\n        return {\n            ...state,\n            isLoading: false,\n            isError: true,\n            isSuccess: false\n        }\n\n        case PATCH_WISH_REQUEST :\n        return {\n            ...state,\n            isLoading: true,\n            isError: false,\n            isSuccess: false\n        }    \n        \n        case PATCH_WISH_SUCCESS :\n        return {\n            ...state,\n            isLoading: false,\n            isError: false,\n            isSuccess: true\n        }\n\n        case PATCH_WISH_FAILURE :\n        return {\n            ...state,\n            isLoading: false,\n            isError: true,\n            isSuccess: false\n        }\n    \n        default:\n        return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}